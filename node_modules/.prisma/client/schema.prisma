generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Food {
  id        Int          @id @default(autoincrement())
  name      String
  price     Int
  status    Boolean 
  is_drink  Boolean 
  FoodOrder FoodOrder[]
}

model FoodOrder {
  food_id     Int
  weeding_id  Int
  count       Int
  note        String?
  Food        Food        @relation(fields: [food_id], references: [id])
  Wedding     Wedding     @relation(fields: [weeding_id], references: [id])

  @@id([food_id, weeding_id])
}

model Bill {
  id            Int        @id @default(autoincrement())
  wedding_id    Int
  payment_date  DateTime
  service_total_price Int
  total_price   Int
  Wedding       Wedding   @relation(fields: [wedding_id], references: [id])
}

model Lobby {
  id             Int         @id @default(autoincrement())
  type           String
  max_table_count Int
  min_table_price Int
  note           String?
  Wedding        Wedding[]
}

// Purpose: This enum represents the shifts of a wedding.
enum Shift {
    noon
    evening
}


model Wedding {
  id           Int          @id @default(autoincrement())
  groom        String
  bride        String
  order_date   DateTime
  wedding_date DateTime
  shift        Shift 
  lobby_id     Int
  Customer_id  Int
  deposit      Int
  table_count  Int
  min_table_price Int
  is_poorly_mode Boolean
  arrived_time DateTime
  Bill         Bill[]
  FoodOrder    FoodOrder[]
  ServiceOrder ServiceOrder[]
  Lobby        Lobby        @relation(fields: [lobby_id], references: [id])
  Customer     Customer     @relation(fields: [Customer_id], references: [id])
}


model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String
  Wedding        Wedding[]

}

model Service {
  id           Int          @id @default(autoincrement())
  name         String
  price        Int
  status       Boolean
  ServiceOrder ServiceOrder[]
}

model ServiceOrder {
  service_id  Int
  weeding_id  Int
  count       Int
  Service     Service    @relation(fields: [service_id], references: [id])
  Wedding     Wedding    @relation(fields: [weeding_id], references: [id])

   @@id([service_id, weeding_id])
}


model User {
  id           Int             @id @default(autoincrement())
  isAdmin      Boolean        
  display_name String
  username     String
  password     String
  UserPermission UserPermission[]
}

model Permission {
  id           Int             @id @default(autoincrement())
  name         String
  description  String?
  UserPermission UserPermission[]
}

model UserPermission {
  user_id       Int
  permission_id Int
  User          User          @relation(fields: [user_id], references: [id])
  Permission    Permission    @relation(fields: [permission_id], references: [id])

  @@id([user_id, permission_id])
}

